version: '3.9'

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    network_mode: "host"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    env_file:
      - path: ./back/.env
        required: true
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    network_mode: "host"

  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    env_file:
      - path: ./front/.env
        required: true
    ports:
      - "8000:8000"
    volumes:
      - flutter_builds:/app/public/downloads
    network_mode: "host"

  flutter:
    build:
      context: ./mobile
      dockerfile: Dockerfile
    volumes:
      - flutter_builds:/app
    network_mode: "host"

volumes:
  postgres_data:
  flutter_builds: