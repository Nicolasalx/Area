INSERT INTO "Reactions" ("name", "description", "trigger", "isActive", "createdAt", "serviceId", "body")
VALUES
    ('send_email', 'Sends an email when triggered.', '{"reaction": "send_email"}', true, NOW(), (SELECT id FROM "Services" WHERE "name" = 'google' LIMIT 1), '[{"field": "from", "description": "The senders email address of the request", "fieldType": "email"}, {"field": "to", "description": "The recipients email address of the request", "fieldType": "email"}, {"field": "subject", "description": "The subject of the email sent in the request", "fieldType": "string"}, {"field": "text", "description": "The plain text body of the email", "fieldType": "string"}, {"field": "html", "description": "The HTML formatted body of the email", "fieldType": "html"}]'),
    ('set_calendar_event', 'Sets an event in Google Calendar when triggered.', '{"reaction": "set_event_calendar"}', true, NOW(), (SELECT id FROM "Services" WHERE "name" = 'google' LIMIT 1), '[{"field": "calendarId", "description": "The calendar to which the event will be added", "fieldType": "string"}, {"field": "summary", "description": "The title or summary of the event", "fieldType": "string"}, {"field": "description", "description": "A description of the event", "fieldType": "string"}, {"field": "location", "description": "The location of the event, e.g., Google Meet", "fieldType": "string"}, {"field": "startDateTime", "description": "The start date and time of the event in ISO 8601 format", "fieldType": "calendar"}, {"field": "endDateTime", "description": "The end date and time of the event in ISO 8601 format", "fieldType": "calendar"}, {"field": "attendees", "description": "A list of participant email addresses for the event, as objects with email as the key", "fieldType": "list<email>"}]'),
    ('create_task', 'Create a task in Google Task when triggered.', '{"reaction": "create_task"}', true, NOW(), (SELECT id FROM "Services" WHERE "name" = 'google' LIMIT 1), '[{"field": "tasklist", "description": "The tasklist to which the task will be added (e.g., @default)", "fieldType": "string"}, {"field": "title", "description": "The title of the task", "fieldType": "string"}, {"field": "notes", "description": "Additional notes for the task", "fieldType": "string"}, {"field": "due", "description": "The due date of the task in ISO 8601 format", "fieldType": "calendar"}]'),
    ('create_drive_element', 'Create an element (it can be a folder, docs, sheets, slides, forms) in Google Drive when triggered.', '{"reaction": "create_drive_element"}', true, NOW(), (SELECT id FROM "Services" WHERE "name" = 'google' LIMIT 1), '[{"field": "title", "description": "The name of the element to be created (e.g., folder, document)", "fieldType": "string"}, {"field": "elementType", "description": "The type of the element to be created", "fieldType": "select", "options": ["docs", "sheets", "slides", "forms", "folder"]}]'),
    ('create_youtube_playlist', 'Create a YouTube Playlist when triggered.', '{"reaction": "create_youtube_playlist"}', true, NOW(), (SELECT id FROM "Services" WHERE "name" = 'google' LIMIT 1), '[{"field": "title", "description": "The name of the YouTube playlist", "fieldType": "string"}, {"field": "description", "description": "A description of the YouTube playlist", "fieldType": "string"}, {"field": "privacyStatus", "description": "The privacy status of the playlist. Possible values are: public, private, unlisted", "fieldType": "enum"}]'),
    ('create_youtube_playlist', 'Create a YouTube Playlist when triggered.', '{"reaction": "create_youtube_playlist"}', true, NOW(), (SELECT id FROM "Services" WHERE "name" = 'google' LIMIT 1), '[{"field": "title", "description": "The name of the YouTube playlist", "fieldType": "string"}, {"field": "description", "description": "A description of the YouTube playlist", "fieldType": "string"}, {"field": "privacyStatus", "description": "The privacy status of the playlist. Possible values are: public, private, unlisted", "fieldType": "select", "options": ["public", "private", "unlisted"]}]'),
    ('send_message', 'Send a message to a Discord channel.', '{"reaction": "send_message"}', true, NOW(), (SELECT id FROM "Services" WHERE "name" = 'discord' LIMIT 1), '[{"field": "message", "description": "Message to send in the channel", "fieldType": "string"}]');
